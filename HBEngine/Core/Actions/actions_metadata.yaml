#  The Heartbeat Engine is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  The Heartbeat Engine is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with the Heartbeat Engine. If not, see <https://www.gnu.org/licenses/>.
#
# --- Overview ---
# This file is used to define the parameters and values for each action specified within the 'actions.py' module, as
# well as how the Heartbeat Editor uses and represents each action. The data here is often referred to as 'action_data'.
#
# While the Heartbeat Engine only requires the name and value for any action parameter, the Heartbeat Editor requires
# extra details pertaining to its display within the Editor. To avoid inflating project data files, these Editor-only
# parameters are stripped during saving. The result will look something like the following (pulled from a Scene file):
#
# - create_background:
#     key: Background
#     sprite: Content/Smokestacks.png
#     position:
#     - 0
#     - 0
#
# If you open a project data file, you may notice that some parameters are not there. When a parameter has a 'global'
# value assigned, the Heartbeat Editor strips it during saving. This is to avoid saving the global value, which may
# become out of date. During runtime, the Heartbeat Engine will use the latest global value for any parameters that are
# not found.

# --- Making Changes ---
# Whenever a project file references an action here, it typically creates a copy that it updates and stores within
# itself. As such, any changes to this file may not apply retroactively to other project files.
#
# --- Legend ---
#   - 'global' causes the action to ignore 'default' and 'value', and instead use a value from the project's "game.yaml"
#     file. The syntax is: [<category>, <value>].
#   - 'value' is used to store the latest updated value independently of the default.
#   - [Editor Only] 'default' is used to allow resetting 'value'
#   - [Editor Only] 'editable' controls whether a parameter can be changed by the user either in the editor, or via editing the file manually.
#   - [Editor Only] 'type' controls how that parameter is displayed in the editor (IE. Dropdown vs text box)
#   - [Editor Only] 'flags' is a list of key words that various sub-editors can use. Options:
#                   -  'preview' controls whether certain editors can show the value of the parameter in additional areas of the interface
#                   -  'no_exclusion' controls whether to remove editor-specific property exclusions for a property and its children. This
#                      is necessary when editors such as PointAndClick have blanket exclusions for properties such as 'post_wait', and you
#                      you need it available for a particular action
#                   - 'global_active' controls whether the parameter will use the global value, or 'value' / 'default'
#   - [Editor Only] 'template' is a special keyword for parameters that allow children to be dynamically created by the
#                   user. This keyword is only usable with the 'Array' type

# Renderables

create_sprite:
  display_name: "Create Sprite"
  requirements:
    key:
      type: "String"
      value: ""
      default: ""
      flags: ["editable", "preview"]

    sprite:
      type: "Asset_Image"
      value: "None"
      default: "None"
      flags: ["editable", "preview"]

    position:
      type: "Vector2"
      value: [ 0.5, 0.5 ]
      default: [ 0.5, 0.5 ]
      flags: ["editable", "preview"]

    center_align:
      type: "Bool"
      value: True
      default: True
      flags: ["editable", "preview"]

    z_order:
      type: "Int"
      value: 0
      default: 0
      flags: ["editable", "preview"]

    flip:
      type: "Bool"
      value: False
      default: False
      flags: ["editable"]

    transition:
      type: "Container"
      flags: ["preview"]
      children:
        type:
          type: "Dropdown"
          value: "None"
          default: "None"
          options:
            - "None"
            - "fade_in"
          flags: ["editable", "preview"]

        speed:
          type: "Int"
          value: 500
          default: 500
          flags: ["editable", "preview"]

    post_wait:
      type: "Dropdown"
      value: "wait_for_input"
      default: "wait_for_input"
      options:
        - "no_wait"
        - "wait_for_input"
        - "wait_until_complete"
      flags: ["editable", "preview"]

create_background:
  display_name: "Create Background"
  requirements:
    key:
      type: "String"
      value: "Background"
      default: "Background"

    sprite:
      type: "Asset_Image"
      value: "None"
      default: "None"
      flags: ["editable", "preview"]

    position:
      type: "Vector2"
      value: [ 0,0 ]
      default: [ 0,0 ]

    center_align:
      type: "Bool"
      value: False
      default: False

    z_order:
      type: "Int"
      value: -9999
      default: -9999

    flip:
      type: "Bool"
      value: False
      default: False
      flags: ["editable"]

    post_wait:
      type: "Dropdown"
      value: "no_wait"
      default: "no_wait"
      options:
        - "no_wait"
        - "wait_for_input"
        - "wait_until_complete"
      flags: ["editable", "preview"]

create_text:
  display_name: "Create Text"
  requirements:
    key:
      type: "String"
      value: ""
      default: ""
      flags: ["editable", "preview"]

    position:
      type: "Vector2"
      value: [0.5,0.5]
      default: [0.5,0.5]
      flags: ["editable", "preview"]

    center_align:
      type: "Bool"
      value: True
      default: True
      global: ["Text", "center_align"]
      flags: ["editable", "global_active"]

    text:
      type: "Paragraph"
      value: "Default"
      default: "Default"
      flags: ["editable", "preview"]

    text_size:
      type: "Int"
      value: 24
      default: 24
      global: ["Text", "size"]
      flags: ["editable", "preview", "global_active"]

    text_color:
      type: "Color"
      value: [255, 255, 255]
      default: [255, 255, 255]
      global: ["Text", "color"]
      flags: ["editable", "preview", "global_active"]

    font:
      type: "Asset_Font"
      value: "None"
      default: "None"
      global: ["Text", "font"]
      flags: ["editable", "global_active"]

    z_order:
      type: "Int"
      value: 0
      default: 0
      global: ["Text", "z_order"]
      flags: ["editable", "preview", "global_active"]

    wrap_bounds:
      type: "Vector2"
      value: [0.2,0.2]
      default: [0.2,0.2]
      global: ["Text", "wrap_bounds"]
      flags: ["editable", "global_active"]

    transition:
      type: "Container"
      flags: ["preview"]
      children:
        type:
          type: "Dropdown"
          value: "None"
          default: "None"
          options:
            - "None"
            - "fade_in"
          flags: ["editable", "preview"]

        speed:
          type: "Int"
          value: 500
          default: 500
          flags: ["editable", "preview"]

    post_wait:
      type: "Dropdown"
      value: "wait_for_input"
      default: "wait_for_input"
      options:
        - "no_wait"
        - "wait_for_input"
        - "wait_until_complete"
      flags: ["editable", "preview"]

remove_renderable:
  display_name: "Remove Renderable"
  requirements:
    key:
      type: "String"
      value: ""
      default: ""
      flags: ["editable", "preview"]

    transition:
      type: "Container"
      flags: ["preview"]
      children:
        type:
          type: "Dropdown"
          value: "None"
          default: "None"
          options:
            - "None"
            - "fade_out"
          flags: ["editable", "preview"]

        speed:
          type: "Int"
          value: 500
          default: 500
          flags: ["editable", "preview"]

    post_wait:
      type: "Dropdown"
      value: "no_wait"
      default: "no_wait"
      options:
        - "no_wait"
        - "wait_for_input"
        - "wait_until_complete"
      flags: ["editable", "preview"]

# Interactables

create_button:
  display_name: "Create Button"
  requirements:
    key:
      type: "String"
      value: ""
      default: ""
      flags: ["editable", "preview"]

    position:
      type: "Vector2"
      value: [ 0.5, 0.5 ]
      default: [ 0.5, 0.5 ]
      flags: ["editable", "preview"]

    center_align:
      type: "Bool"
      value: True
      default: True
      flags: ["editable"]

    sprite:
      type: "Asset_Image"
      value: "HBEngine/Content/Sprites/Interface/Buttons/Menu_Button_Normal.png"
      default: "HBEngine/Content/Sprites/Interface/Buttons/Menu_Button_Normal.png"
      global: ["Button", "sprite"]
      flags: ["editable", "preview", "global_active"]

    sprite_hover:
      type: "Asset_Image"
      value: "HBEngine/Content/Sprites/Interface/Buttons/Menu_Button_Hover.png"
      default: "HBEngine/Content/Sprites/Interface/Buttons/Menu_Button_Hover.png"
      global: ["Button", "sprite_hover"]
      flags: ["editable", "global_active"]

    sprite_clicked:
      type: "Asset_Image"
      value: "HBEngine/Content/Sprites/Interface/Buttons/Menu_Button_Clicked.png"
      default: "HBEngine/Content/Sprites/Interface/Buttons/Menu_Button_Clicked.png"
      global: ["Button", "sprite_clicked"]
      flags: ["editable", "global_active"]

    z_order:
      type: "Int"
      value: 10001
      default: 10001
      global: ["Button", "z_order"]
      flags: ["editable", "global_active"]

    button_text:
      type: "Container"
      flags: ["editable", "preview"]
      children:
        position:
          type: "Vector2"
          value: [ 0.5, 0.5 ]
          default: [ 0.5, 0.5 ]
          flags: ["editable", "preview"]

        center_align:
          type: "Bool"
          value: True
          default: True
          flags: ["editable"]

        text:
          type: "String"
          value: "Default"
          default: "Default"
          flags: ["editable", "preview"]

        text_size:
          type: "Int"
          value: 24
          default: 24
          global: ["Text", "size"]
          flags: ["editable", "global_active"]

        text_color:
          type: "Color"
          value: [ 255, 255, 255 ]
          default: [ 255, 255, 255 ]
          global: ["Text", "color"]
          flags: ["editable", "global_active"]

        text_color_hover:
          type: "Color"
          value: [ 255, 255, 255 ]
          default: [ 255, 255, 255 ]
          global: ["Text", "color"]
          flags: ["editable", "global_active"]

        text_color_clicked:
          type: "Color"
          value: [ 255, 255, 255 ]
          default: [ 255, 255, 255 ]
          global: ["Text", "color"]
          flags: ["editable", "global_active"]

        font:
          type: "Asset_Font"
          value: "None"
          default: "None"
          global: ["Button", "font"]
          flags: ["editable", "global_active"]

        z_order: # Button text generate it's z_order based on the parent's. However, the param is still needed
          type: "Int"
          value: 10002
          default: 10002

        wrap_bounds:
          type: "Vector2"
          value: [ 0.2,0.2 ]
          default: [ 0.2,0.2 ]
          flags: ["editable"]

    events:
      type: "Array"
      flags: ["editable", "no_exclusion"]
      template:
        event:
          type: "Array_Element"
          flags: ["editable"]
          children:
            action:
              type: "Event"
              value: "None"
              default: "None"
              options:
                - "None"
                - "load_scene"
                - "quit_game"
                - "scene_fade_out"
                - "scene_fade_in"
                - "play_sfx"
              flags: ["editable"]

create_text_button:
  display_name: "Create Button (Text Only)"
  requirements:
    key:
      type: "String"
      value: ""
      default: ""
      flags: ["editable", "preview"]

    position:
      type: "Vector2"
      value: [ 0.5, 0.5 ]
      default: [ 0.5, 0.5 ]
      flags: ["editable", "preview"]

    center_align:
      type: "Bool"
      value: True
      default: True
      flags: ["editable"]

    text:
      type: "String"
      value: "Default"
      default: "Default"
      flags: ["editable", "preview"]

    text_size:
      type: "Int"
      value: 24
      default: 24
      global: ["Text", "size"]
      flags: ["editable", "global_active"]

    text_color:
      type: "Color"
      value: [ 255, 255, 255 ]
      default: [ 255, 255, 255 ]
      global: ["Text", "color"]
      flags: ["editable", "global_active"]

    text_color_hover:
      type: "Color"
      value: [ 255, 255, 255 ]
      default: [ 255, 255, 255 ]
      global: ["Text", "color"]
      flags: ["editable", "global_active"]

    text_color_clicked:
      type: "Color"
      value: [ 255, 255, 255 ]
      default: [ 255, 255, 255 ]
      global: ["Text", "color"]
      flags: ["editable", "global_active"]

    font:
      type: "Asset_Font"
      value: "None"
      default: "None"
      global: ["Button", "font"]
      flags: ["editable", "global_active"]

    z_order: # Button text generate it's z_order based on the parent's. However, the param is still needed
      type: "Int"
      value: 10002
      default: 10002

    wrap_bounds:
      type: "Vector2"
      value: [ 0.2,0.2 ]
      default: [ 0.2,0.2 ]
      flags: ["editable"]

    events:
      type: "Array"
      flags: ["editable", "no_exclusion"]
      template:
        event:
          type: "Array_Element"
          flags: ["editable"]
          children:
            action:
              type: "Event"
              value: "None"
              default: "None"
              options:
                - "None"
                - "load_scene"
                - "quit_game"
                - "scene_fade_out"
                - "scene_fade_in"
                - "play_sfx"
              flags: ["editable"]

# Dialogue

create_dialogue_interface:
  display_name: "Create Dialogue Interface"
  requirements:
    key:
      type: "String"
      value: "DialogueFrame"
      default: "DialogueFrame"

    sprite:
      type: "Asset_Image"
      value: "None"
      default: "None"
      global: ["Dialogue", "dialogue_frame_sprite"]
      flags: ["editable", "preview", "global_active"]

    position:
      type: "Vector2"
      value: [0,0]
      default: [0,0]
      global: ["Dialogue", "dialogue_frame_position"]
      flags: ["editable", "preview", "global_active"]

    center_align:
      type: "Bool"
      value: True
      default: True
      global: ["Dialogue", "dialogue_frame_center_align"]
      flags: ["editable", "preview", "global_active"]

    z_order:
      type: "Int"
      value: 9999
      default: 9999
      global: ["Dialogue", "dialogue_frame_z_order"]
      flags: ["global_active"]

    post_wait:
      type: "Dropdown"
      value: "no_wait"
      default: "no_wait"
      options:
        - "no_wait"
        - "wait_for_input"
        - "wait_until_complete"
      flags: ["editable", "preview"]

dialogue:
  display_name: "Dialogue"
  requirements:
    speaker:
      type: "Container"
      flags: ["editable", "preview"]
      children:
        key:
          type: "String"
          value: "SpeakerText"
          default: "SpeakerText"

        position:
          type: "Vector2"
          value: [0,0]
          default: [0,0]
          global: ["Dialogue", "speaker_text_position"]
          flags: ["editable", "global_active"]

        center_align:
          type: "Bool"
          value: True
          default: True
          global: ["Dialogue", "speaker_text_center_align"]
          flags: ["editable", "global_active"]

        text:
          type: "String"
          value: ""
          default: ""
          flags: ["editable", "preview"]

        text_size:
          type: "Int"
          value: 24
          default: 24
          global: ["Dialogue", "speaker_text_size"]
          flags: ["editable", "global_active"]

        text_color:
          type: "Color"
          value: [255, 255, 255]
          default: [255, 255, 255]
          global: ["Dialogue", "speaker_text_color"]
          flags: ["editable", "global_active"]

        font:
          type: "Asset_Font"
          value: "None"
          default: "None"
          global: ["Dialogue", "speaker_text_font"]
          flags: ["editable", "global_active"]

        z_order:
          type: "Int"
          value: 0
          default: 0
          global: ["Dialogue", "speaker_text_z_order"]
          flags: ["global_active"]

        transition:
          type: "Container"
          flags: ["editable"]
          children:
            type:
              type: "Dropdown"
              value: "None"
              default: "None"
              global: [ "Dialogue", "transition_type" ]
              options:
                - "fade_in"
                - "None"
              flags: ["editable", "global_active"]

            speed:
              type: "Int"
              value: 500
              default: 500
              global: [ "Dialogue", "transition_speed" ]
              flags: ["editable", "global_active"]

        wrap_bounds:
          type: "Vector2"
          value: [ 0.2,0.2 ]
          default: [ 0.2,0.2 ]
          global: [ "Dialogue", "speaker_text_wrap_bounds" ]
          flags: ["global_active"]

    dialogue:
      type: "Container"
      flags: ["editable", "preview"]
      children:
        key:
          type: "String"
          value: "DialogueText"
          default: "DialogueText"

        position:
          type: "Vector2"
          value: [0,0]
          default: [0,0]
          global: ["Dialogue", "dialogue_text_position"]
          flags: ["editable", "global_active"]

        center_align:
          type: "Bool"
          value: True
          default: True
          global: ["Dialogue", "dialogue_text_center_align"]
          flags: ["editable", "global_active"]

        text:
          type: "Paragraph"
          value: "Default"
          default: "Default"
          flags: ["editable", "preview"]

        text_size:
          type: "Int"
          value: 24
          default: 24
          global: ["Dialogue", "dialogue_text_size"]
          flags: ["editable", "global_active"]

        text_color:
          type: "Color"
          value: [255, 255, 255]
          default: [255, 255, 255]
          global: ["Dialogue", "dialogue_text_color"]
          flags: ["editable", "global_active"]

        font:
          type: "Asset_Font"
          value: "None"
          default: "None"
          global: ["Dialogue", "dialogue_text_font"]
          flags: ["editable", "global_active"]

        z_order:
          type: "Int"
          value: 0
          default: 0
          global: ["Dialogue", "dialogue_text_z_order"]
          flags: ["global_active"]

        transition:
          type: "Container"
          flags: ["editable"]
          children:
            type:
              type: "Dropdown"
              value: "fade_in"
              default: "fade_in"
              global: ["Dialogue", "transition_type"]
              options:
                - "fade_in"
                - "None"
              flags: ["editable", "global_active"]

            speed:
              type: "Int"
              value: 1000
              default: 1000
              global: ["Dialogue", "transition_speed"]
              flags: ["editable", "global_active"]

        wrap_bounds:
          type: "Vector2"
          value: [ 0.8,0.16 ]
          default: [ 0.8,0.16 ]
          global: [ "Dialogue", "dialogue_text_wrap_bounds" ]
          flags: ["global_active"]

    post_wait:
      type: "String"
      value: "wait_for_input"
      default: "wait_for_input"
      flags: ["no_exclusion"]

choice:
  display_name: "Choice"
  requirements:
    choices:
      type: "Array"
      flags: ["editable", "preview"]
      template:
        choice:
          type: "Array_Element"
          flags: ["editable", "preview"]
          children:
            branch:
              type: "String"
              value: ""
              default: ""
              flags: ["editable", "preview"]

            position:
              type: "Vector2"
              value: [ 0.5, 0.5 ]
              default: [ 0.5, 0.5 ]
              flags: ["editable", "preview"]

            center_align:
              type: "Bool"
              value: True
              default: True

            sprite:
              type: "Asset_Image"
              value: "HBEngine/Content/Sprites/Interface/Buttons/Choice_Button_Normal.png"
              default: "HBEngine/Content/Sprites/Interface/Buttons/Choice_Button_Normal.png"
              global: ["Dialogue", "choice_button_sprite"]
              flags: ["editable", "preview", "global_active"]

            sprite_hover:
              type: "Asset_Image"
              value: "HBEngine/Content/Sprites/Interface/Buttons/Choice_Button_Hover.png"
              default: "HBEngine/Content/Sprites/Interface/Buttons/Choice_Button_Hover.png"
              global: [ "Dialogue", "choice_button_sprite_hover" ]
              flags: ["editable", "global_active"]

            sprite_clicked:
              type: "Asset_Image"
              value: "HBEngine/Content/Sprites/Interface/Buttons/Choice_Button_Clicked.png"
              default: "HBEngine/Content/Sprites/Interface/Buttons/Choice_Button_Clicked.png"
              global: [ "Dialogue", "choice_button_sprite_clicked" ]
              flags: ["editable", "global_active"]

            z_order:
              type: "Int"
              value: 10001
              default: 10001
              global: ["Dialogue", "choice_button_text_size"]
              flags: ["global_active"]

            button_text:
              type: "Container"
              flags: ["editable", "preview"]
              children:
                position:
                  type: "Vector2"
                  value: [ 0.5, 0.5 ]
                  default: [ 0.5, 0.5 ]
                  flags: ["editable"]

                center_align:
                  type: "Bool"
                  value: True
                  default: True
                  flags: ["editable"]

                text:
                  type: "String"
                  value: "Default"
                  default: "Default"
                  flags: ["editable", "preview"]

                text_size:
                  type: "Int"
                  value: 24
                  default: 24
                  global: ["Dialogue", "choice_button_text_size"]
                  flags: ["editable", "global_active"]

                text_color:
                  type: "Color"
                  value: [ 255, 255, 255 ]
                  default: [ 255, 255, 255 ]
                  global: ["Dialogue", "choice_button_text_color"]
                  flags: ["editable", "global_active"]

                text_color_hover:
                  type: "Color"
                  value: [ 255, 255, 255 ]
                  default: [ 255, 255, 255 ]
                  global: [ "Dialogue", "choice_button_text_color_hover" ]
                  flags: ["editable", "global_active"]

                text_color_clicked:
                  type: "Color"
                  value: [ 255, 255, 255 ]
                  default: [ 255, 255, 255 ]
                  global: [ "Dialogue", "choice_button_text_color_clicked" ]
                  flags: ["editable", "global_active"]

                font:
                  type: "Asset_Font"
                  value: "HBEngine/Content/Fonts/Comfortaa/Comfortaa-Regular.ttf"
                  default: "HBEngine/Content/Fonts/Comfortaa/Comfortaa-Regular.ttf"
                  global: ["Dialogue", "choice_button_font"]
                  flags: ["editable", "global_active"]

                z_order: # Button text generate its z_order based on the parent's. However, the param is still needed
                  type: "Int"
                  value: 10002
                  default: 10002

                wrap_bounds:
                  type: "Vector2"
                  value: [ 0.25,0.25 ]
                  default: [ 0.25,0.25 ]
                  flags: [ "editable" ]

# Scene

load_scene:
  display_name: "Load Scene"
  requirements:
    scene_file:
      type: "Asset_Scene"
      default: ""
      value: ""
      flags: ["editable", "preview"]

scene_fade_in:
  display_name: "Scene Fade In"
  requirements:
    color:
      type: "Dropdown"
      value: "black"
      default: "black"
      options:
        - "black"
        - "white"
      flags: ["editable", "preview"]

    speed:
      type: "Int"
      value: 300
      default: 300
      flags: ["editable", "preview"]

    post_wait:
      type: "Dropdown"
      value: "wait_until_complete"
      default: "wait_until_complete"
      options:
        - "no_wait"
        - "wait_until_complete"
      flags: [ "editable" ]

scene_fade_out:
  display_name: "Scene Fade Out"
  requirements:
    color:
      type: "Dropdown"
      value: "black"
      default: "black"
      options:
        - "black"
        - "white"
      flags: ["editable", "preview"]

    speed:
      type: "Int"
      value: 300
      default: 300
      flags: ["editable", "preview"]

    post_wait:
      type: "Dropdown"
      value: "wait_until_complete"
      default: "wait_until_complete"
      options:
        - "no_wait"
        - "wait_until_complete"
      flags: [ "editable" ]

# Play Music

play_sfx:
  display_name: "Play SFX"
  requirements:
    key:
      type: "String"
      value: "SFX"
      default: "SFX"
      flags: ["editable", "preview"]

    sound:
      type: "Asset_Sound"
      value: ""
      default: ""
      flags: ["editable", "preview"]

    volume:
      type: "Float"
      value: 1.0
      default: 1.0
      flags: ["editable", "preview"]

    post_wait:
      type: "Dropdown"
      value: "wait_until_complete"
      default: "wait_until_complete"
      options:
        - "no_wait"
        - "wait_until_complete"
      flags: ["editable", "preview", "no_exclusion"]

play_music:
  display_name: "Play Music"
  requirements:
    music:
      type: "Asset_Sound"
      value: ""
      default: ""
      flags: ["editable", "preview"]

    volume:
      type: "Float"
      value: 1.0
      default: 1.0
      flags: ["editable", "preview"]

    loop:
      type: "Bool"
      value: False
      default: False
      flags: ["editable", "preview"]

    post_wait:
      type: "Dropdown"
      value: "no_wait"
      default: "no_wait"
      options:
        - "no_wait"
        - "wait_until_complete"
      flags: ["editable", "preview"]

stop_sfx:
  display_name: "Stop SFX"
  requirements:
    key:
      type: "String"
      value: "SFX"
      default: "SFX"
      flags: ["editable", "preview"]

stop_music:
  display_name: "Stop Music"
  requirements:
    key:
      type: "String"
      value: ""
      default: ""
      flags: ["editable", "preview"]

# Utilities

quit_game:
  display_name: "Quit Game"
  requirements: {}
